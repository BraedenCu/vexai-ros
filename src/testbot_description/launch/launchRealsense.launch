<launch>

  <arg name="model" default="$(find testbot_description)/urdf/robot.urdf"/>
  <arg name="gui" default="true" />
  <arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
  <param name="use_gui" value="$(arg gui)"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" /-->


  <!-- Map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="/home/dev/catkin_ws2/src/testbot_description/maps/maphouse.yaml"/>


  <include file="$(find realsense2_camera)/launch/rs_camera.launch"/>

  <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <param name="scan_height" value="3"/>
    <param name="output_frame_id" value="camera_depth_frame"/>
    <remap from="image" to="/camera/depth/image_rect_raw" />
  </node>

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen" >
    <!remap from="odom" to="your/odom/topic" />
    <param name="scan_frame" value="scan"/>
    <param name="odom_frame" value="odom"/>
    <param name="base_frame" value="base_link"/>
    <param name="map_frame" value="map"/>
    <remap from="scan" to="scan"/>
    <remap from="base_frame" to="base_link"/>

    <!remap from="odom" to="odom" />
  </node>
  

  <! Place map frame at odometry frame >
  <node pkg="tf" type="static_transform_publisher" name="map_odom_broadcaster" args="0 0 0 0 0 0 map odom 100"/>

  <! Localization >
  <node pkg="amcl" type="amcl" name="amcl" output="screen">
    <remap from="scan" to="scan"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="odom_model_type" value="diff-corrected"/>
    <param name="base_frame_id" value="base_link"/>
    <param name="update_min_d" value="0.5"/>
    <param name="update_min_a" value="1.0"/>
  </node>
  <!include file="$(find amcl)/examples/amcl_omni.launch"/>


  <! Move base >
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find testbot_description)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find testbot_description)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find testbot_description)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find testbot_description)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find testbot_description)/config/base_local_planner_params.yaml" command="load" />
    
    <remap from="cmd_vel" to="cmd_vel"/>
    <remap from="odom" to="odom"/>
    <remap from="scan" to="scan"/>
    <param name="move_base/DWAPlannerROS/yaw_goal_tolerance" value="1.0"/>
    <param name="move_base/DWAPlannerROS/xy_goal_tolerance" value="1.0"/>
  </node!-->

</launch>